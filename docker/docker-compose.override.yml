version: "2.4"

services:
 # A servercore image with both the netcore and netframework SDKs.
  # See Dockerfile for more details.
  dotnetsdk:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-dotnetsdk:${VERSION:-latest}
    build:
      context: ./build/dotnetsdk
    scale: 0

  # The solution build image is added here so it can be referenced as a build dependency
  # for the images which use its output. Setting "scale: 0" means docker-compose will not
  # include it in the running environment. See Dockerfile for more details.
  solution:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    build:
      context: ../
      args:
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION}
        BUILD_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-dotnetsdk:${VERSION:-latest}
    depends_on:
      - dotnetsdk
    scale: 0

  traefik:
    volumes:
      - ./traefik:C:/etc/traefik
    depends_on:
      - cm

  coveo-assets:
    image: coveo-assets-10.1.5.0.971.3
    build:
      context: ./modules/coveo/coveo
      args:
        BASE_IMAGE: mcr.microsoft.com/windows/nanoserver:${NANOSERVER_VERSION}
        TOOL_IMAGE: ${TOOLS_IMAGE}
        BASE_BUILD_IMAGE: mcr.microsoft.com/windows/servercore:${WINDOWSSERVERCORE_VERSION}
        ROLES: cm

  coveo-sxa-assets:
    image: coveo-sxa-assets-10.1.5.0.971.3
    build:
      context: ./modules/coveo/coveo-sxa
      args:
        BASE_IMAGE: mcr.microsoft.com/windows/nanoserver:${NANOSERVER_VERSION}
        TOOL_IMAGE: ${TOOLS_IMAGE}
        BASE_BUILD_IMAGE: mcr.microsoft.com/windows/servercore:${WINDOWSSERVERCORE_VERSION}
        ROLES: cm
  
  mssql:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-mssql:${VERSION:-latest}
    build:
      context: ./build/mssql
      args:
        PARENT_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp0-mssql:${SITECORE_VERSION}
        SPE_IMAGE: ${SITECORE_DOCKER_REGISTRY}modules/spe-assets:${SPE_VERSION}
        SXA_IMAGE: ${SITECORE_DOCKER_REGISTRY}modules/sxa-xp1-assets:${SXA_VERSION}
        COVEO_ASSET: coveo-assets-10.1.5.0.971.3
        COVEO_SXA_ASSET: coveo-sxa-assets-10.1.5.0.971.3
        HEADLESS_SERVICES_IMAGE: ${HEADLESS_SERVICES_IMAGE}
    volumes:
      - ${LOCAL_DATA_PATH}\mssql:c:\data
    mem_limit: ${MEM_LIMIT_SQL:-2GB}
    restart: always
    depends_on: 
      - coveo-assets
      - coveo-sxa-assets

  # Mount our Solr data folder and use our retagged Solr image.
  solr:
    volumes:
      - ${LOCAL_DATA_PATH}\solr:c:\data
    mem_limit: ${MEM_LIMIT_SOLR:-1GB}
    restart: always

  # Some modules (like SXA) also require additions to the Solr image.
  solr-init:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-solr-init:${VERSION:-latest}
    build:
      context: ./build/solr-init
      args:
        PARENT_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp0-solr-init:${SITECORE_VERSION}
        SXA_IMAGE: ${SITECORE_DOCKER_REGISTRY}modules/sxa-xp1-assets:${SXA_VERSION}

  id:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-id:${VERSION:-latest}
    build:
      context: ./build/id
      args:
        PARENT_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-id:${SITECORE_VERSION}
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
  cm-init:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-cm-init:${VERSION:-latest}
    build:
      context: ./build/cm-init
      args:
        PARENT_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-cm:${VERSION:-latest}
    entrypoint: powershell -Command "& C:\build\activate-coveo.ps1"
    environment:
      sc_cm: 'http://cm'
      COVEO_API_KEY: ${COVEO_API_KEY}
      COVEO_ORGANIZATION_ID: ${COVEO_ORGANIZATION_ID}
      COVEO_SEARCH_API_KEY: ${COVEO_SEARCH_API_KEY}
      COVEO_SITECORE_USERNAME: ${COVEO_SITECORE_USERNAME}
      COVEO_SITECORE_USER_PASSWORD: ${COVEO_SITECORE_USER_PASSWORD}
      COVEO_FARM_NAME: ${COVEO_FARM_NAME}
      COVEO_SCRIPT_SITECORE_USERNAME: ${COVEO_SCRIPT_SITECORE_USERNAME}
      COVEO_SCRIPT_SITECOREPASSWORD: ${COVEO_SCRIPT_SITECOREPASSWORD}
    depends_on:
      cm:
        condition: service_healthy
  cm:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-cm:${VERSION:-latest}
    build:
      context: ./build/cm
      args:
        PARENT_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp0-cm:${SITECORE_VERSION}
        SOLUTION_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
        SPE_IMAGE: ${SITECORE_DOCKER_REGISTRY}modules/spe-assets:${SPE_VERSION}
        SXA_IMAGE: ${SITECORE_DOCKER_REGISTRY}modules/sxa-xp1-assets:${SXA_VERSION}
        TOOLS_IMAGE: ${TOOLS_IMAGE}
        SC_ENV: ${SITECORE_ENVIRONMENT}
        COVEO_ASSET: coveo-assets-10.1.5.0.971.3
        COVEO_SXA_ASSET: coveo-sxa-assets-10.1.5.0.971.3
        HEADLESS_SERVICES_IMAGE: ${HEADLESS_SERVICES_IMAGE}
        NODEJS_VERSION: ${NODEJS_VERSION}
    depends_on:
      - solution
      - coveo-assets
      - coveo-sxa-assets
    volumes:
      - ${LOCAL_DEPLOY_PATH}\platform:C:\deploy
      - ${LOCAL_DATA_PATH}\cm:C:\inetpub\wwwroot\App_Data\logs
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
      SITECORE_ENVIRONMENT: ${SITECORE_ENVIRONMENT}
      Sitecore_JSS_ImportUser: ${JSS_IMPORT_USER:-sitecore\admin}
    entrypoint: powershell -Command "& C:\tools\entrypoints\iis\Development.ps1"
    mem_limit: ${MEM_LIMIT_CM:-4GB}
    restart: always
    labels:
      - "traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https"
      - "traefik.http.routers.cm.entrypoints=websecure"
      - "traefik.http.routers.cm.rule=Host(`${CM_HOST}`)"
      - "traefik.http.routers.cm.middlewares=redirect-to-https"
      - "traefik.http.routers.cd-secure.entrypoints=websecure"
      - "traefik.http.routers.cd-secure.rule=Host(`${CD_HOST}`)"
      - "traefik.http.routers.cd-secure.tls=true"
      - "traefik.http.routers.cd-secure.middlewares=force-STS-Header"

  xconnect:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-xconnect:${VERSION:-latest}
    build:
      context: ./build/xconnect
      args:
        PARENT_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp0-xconnect:${SITECORE_VERSION}
        SOLUTION_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}        
        TOOLS_IMAGE: ${TOOLS_IMAGE}
    environment: 
      SITECORE_LICENSE_LOCATION: C:\license
    depends_on:
      - solution      
    volumes:
      - ${HOST_LICENSE_FOLDER}:C:\license
      - ${LOCAL_DEPLOY_PATH}\xconnect:C:\deploy
    entrypoint: powershell -Command "& C:\tools\entrypoints\iis\Development.ps1"
    restart: always

  xdbsearchworker:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-xdbsearchworker:${VERSION:-latest}
    build:
      context: ./build/xdbsearchworker
      args:
        PARENT_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp0-xdbsearchworker:${SITECORE_VERSION}
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment: 
      SITECORE_LICENSE_LOCATION: c:\license\
    restart: always

  xdbautomationworker:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-xdbautomationworker:${VERSION:-latest}
    build:
      context: ./build/xdbautomationworker
      args:
        PARENT_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp0-xdbautomationworker:${SITECORE_VERSION}
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment: 
      SITECORE_LICENSE_LOCATION: c:\license\
    restart: always

  cortexprocessingworker:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-cortexprocessingworker:${VERSION:-latest}
    build:
      context: ./build/cortexprocessingworker
      args:
        PARENT_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp0-cortexprocessingworker:${SITECORE_VERSION}
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment: 
      SITECORE_LICENSE_LOCATION: c:\license\
    restart: always